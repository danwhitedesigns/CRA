{"version":3,"sources":["Components/PokemonCard.js","App.js","reportWebVitals.js","index.js"],"names":["PokemonCard","props","state","name","imageUrl","pokemonIndex","this","url","split","length","setState","className","toLowerCase","map","char","charAt","toUpperCase","substring","join","src","Component","App","pokemon","a","Axios","get","response","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAmCeA,E,kDAhCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,GACNC,SAAU,GACVC,aAAc,IALH,E,qDAQnB,WACI,MAAsBC,KAAKL,MAAnBE,EAAR,EAAQA,KAAMI,EAAd,EAAcA,IACRF,EAAeE,EAAIC,MAAM,KAAKD,EAAIC,MAAM,KAAKC,OAAS,GACtDL,EAAQ,mFAA+EC,EAA/E,QAEdC,KAAKI,SAAS,CAAEP,OAAMC,WAAUC,mB,oBAGpC,WAEI,OACI,qBAAKM,UAAU,gCAAf,SACI,sBAAKA,UAAU,OAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BL,KAAKJ,MAAMG,eACxC,sBAAKM,UAAU,oBAAf,UACI,oBAAIA,UAAU,yBAAd,SAAwCL,KAAKJ,MAAMC,KAAKS,cAAcJ,MAAM,KAAKK,KAAI,SAAAC,GAAI,OAAIA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,UAAU,MAAIC,KAAK,OACpJ,qBAAKC,IAAKb,KAAKJ,MAAME,SAAUO,UAAU,0B,GAzBvCS,a,iBCEpBC,E,kDACF,WAAYpB,GAAQ,IAAD,6BACf,cAAMA,IAEDC,MAAQ,CACTK,IAAI,4CAAD,OAFO,MAGVe,QAAS,MALE,E,4FASnB,4BAAAC,EAAA,sEAC2BC,IAAMC,IAAInB,KAAKJ,MAAMK,KADhD,OACUmB,EADV,OAEIpB,KAAKI,SAAS,CAAEY,QAASI,EAASC,KAAT,UAF7B,gD,0EAKA,WACI,OACI,qBAAKhB,UAAU,MAAf,SAEQL,KAAKJ,MAAMoB,QACP,qBAAKX,UAAU,YAAf,SACI,qBAAKA,UAAU,WAAf,SACKL,KAAKJ,MAAMoB,QAAQT,KAAI,SAAAS,GAAO,OAC3B,cAAC,EAAD,CAAgCnB,KAAMmB,EAAQnB,KAAMI,IAAKe,EAAQf,KAA/Ce,EAAQnB,aAIrC,oD,GA3BPiB,aAkCHC,IC1BAO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ebd95390.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass PokemonCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            imageUrl: '',\r\n            pokemonIndex: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const { name, url } = this.props;\r\n        const pokemonIndex = url.split('/')[url.split('/').length - 2];\r\n        const imageUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonIndex}.png`;\r\n\r\n        this.setState({ name, imageUrl, pokemonIndex });\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"col-12 col-md-4 col-lg-3 mb-3\">\r\n                <div className=\"card\">\r\n                    <h4 className=\"card-header\">{this.state.pokemonIndex}</h4>\r\n                    <div className=\"card-body mx-auto\">\r\n                        <h6 className=\"card-title text-center\">{this.state.name.toLowerCase().split(\" \").map(char => char.charAt(0).toUpperCase() + char.substring(1)).join(' ')}</h6>\r\n                        <img src={this.state.imageUrl} className=\"img-fluid\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PokemonCard","import React, { Component } from \"react\";\r\nimport PokemonCard from './Components/PokemonCard';\r\nimport Axios from 'axios';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const limit = 1118;\r\n        this.state = {\r\n            url: `https://pokeapi.co/api/v2/pokemon/?limit=${limit}`,\r\n            pokemon: null,\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await Axios.get(this.state.url);\r\n        this.setState({ pokemon: response.data['results'] })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                {\r\n                    this.state.pokemon ? (\r\n                        <div className=\"container\">\r\n                            <div className=\"row mt-3\">\r\n                                {this.state.pokemon.map(pokemon => (\r\n                                    <PokemonCard key={pokemon.name} name={pokemon.name} url={pokemon.url} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    ) : (<span>Loading...</span>)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}