{"version":3,"sources":["ApiCall.js","App.js","reportWebVitals.js","index.js"],"names":["ApiCall","props","pokemonName","name","className","Text","style","textTransform","color","App","state","results","offset","initialAmount","currentPage","nextPageClickEvent","bind","fetch","this","then","res","json","result","setState","apiCallList","map","pokemon","i","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAaeA,MAVf,SAAiBC,GACb,IAAIC,EAAcD,EAAME,KAExB,OACI,qBAAKC,UAAU,4CAAf,SACI,cAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,cAAe,aAAcC,MAAO,SAAnD,SAA+DN,OCmD5DO,E,kDAvDX,WAAYR,GAAQ,IAAD,8BACf,cAAMA,IACDS,MAAQ,CACTC,QAAS,GACTC,OAAQ,EACRC,cAAe,GACfC,YAAa,GAGjB,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBATX,E,sDAYnB,WAAsB,IAAD,OACjBC,MAAM,6CAA+CC,KAAKR,MAAME,OAAS,UAAYM,KAAKR,MAAMG,eAC3FM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACH,EAAKC,SAAS,CAAEZ,QAASW,EAAOX,UAChC,EAAKY,SAAS,CAAEX,OAAQ,EAAKF,MAAME,OAAS,EAAKF,MAAMG,gBACvD,EAAKU,SAAS,CAAET,YAAa,EAAKJ,MAAMI,YAAY,S,+BAIhE,WAAqB,IAAD,OAChBG,MAAM,4CAA8CC,KAAKR,MAAMG,eAC1DM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACH,EAAKC,SAAS,CAAEZ,QAASW,EAAOX,UAChC,EAAKY,SAAS,CAAEX,OAAQ,EAAKF,MAAMG,qB,oBAK/C,WACI,IAAMW,EAAcN,KAAKR,MAAMC,QAAQc,KAAI,SAACC,EAASC,GACjD,OAAO,cAAC,EAAD,CAAiBxB,KAAMuB,EAAQvB,MAAjBwB,MAEzB,OACI,qBAAKvB,UAAU,MAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,mBAAd,iCACA,qBAAKA,UAAU,mBAAf,SACI,kDAAqBc,KAAKR,MAAMI,iBAEpC,qBAAKV,UAAU,mBAAf,SACI,wBAAQwB,QAASV,KAAKH,mBAAtB,yBAEJ,qBAAKX,UAAU,MAAf,SACKoB,a,GAhDPK,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.99b3c96f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Text } from 'react-native';\r\n\r\nfunction ApiCall(props) {\r\n    let pokemonName = props.name\r\n\r\n    return (\r\n        <div className=\"col-6 col-md-3 text-center border bg-dark\">\r\n            <Text style={{ textTransform: 'capitalize', color: 'white' }}>{pokemonName}</Text>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ApiCall;","import React, { Component } from \"react\";\r\nimport ApiCall from './ApiCall';\r\n\r\nclass App extends Component {\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            results: [],\r\n            offset: 0,\r\n            initialAmount: 24,\r\n            currentPage: 1\r\n        }\r\n\r\n        this.nextPageClickEvent = this.nextPageClickEvent.bind(this);\r\n    }\r\n\r\n    nextPageClickEvent() {\r\n        fetch('https://pokeapi.co/api/v2/pokemon/?offset=' + this.state.offset + '&limit=' + this.state.initialAmount)\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                this.setState({ results: result.results });\r\n                this.setState({ offset: this.state.offset + this.state.initialAmount });\r\n                this.setState({ currentPage: this.state.currentPage+1 });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://pokeapi.co/api/v2/pokemon/?limit=' + this.state.initialAmount)\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                this.setState({ results: result.results });\r\n                this.setState({ offset: this.state.initialAmount });\r\n            });\r\n        \r\n    }\r\n\r\n    render() {\r\n        const apiCallList = this.state.results.map((pokemon, i) => {\r\n            return <ApiCall key={i} name={pokemon.name} />\r\n        })\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"text-center mb-4\">Pokemon Api Results</h1>\r\n                    <div className=\"text-center mb-4\">\r\n                        <span>Current page: {this.state.currentPage}</span>\r\n                    </div>\r\n                    <div className=\"text-center mb-4\">\r\n                        <button onClick={this.nextPageClickEvent}>Next Page</button>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {apiCallList}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}